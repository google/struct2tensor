{
  "duplicate_of": {
    "expression_impl.parquet.ParquetDataset.__eq__": "expression_impl.map_prensor_to_prensor.Schema.__eq__",
    "expression_impl.parquet.ParquetDataset.__ge__": "expression_impl.map_prensor_to_prensor.Schema.__ge__",
    "expression_impl.parquet.ParquetDataset.__gt__": "expression_impl.map_prensor_to_prensor.Schema.__gt__",
    "expression_impl.parquet.ParquetDataset.__le__": "expression_impl.map_prensor_to_prensor.Schema.__le__",
    "expression_impl.parquet.ParquetDataset.__lt__": "expression_impl.map_prensor_to_prensor.Schema.__lt__",
    "expression_impl.parquet.ParquetDataset.__ne__": "expression_impl.map_prensor_to_prensor.Schema.__ne__",
    "expression_impl.parquet.ParquetDataset.__new__": "expression_impl.map_prensor_to_prensor.Schema.__new__",
    "expression_impl.parquet.ParquetDataset.__nonzero__": "expression_impl.parquet.ParquetDataset.__bool__",
    "expression_impl.promote.PromoteChildExpression.__ge__": "expression_impl.map_prensor_to_prensor.Schema.__ge__",
    "expression_impl.promote.PromoteChildExpression.__gt__": "expression_impl.map_prensor_to_prensor.Schema.__gt__",
    "expression_impl.promote.PromoteChildExpression.__le__": "expression_impl.map_prensor_to_prensor.Schema.__le__",
    "expression_impl.promote.PromoteChildExpression.__lt__": "expression_impl.map_prensor_to_prensor.Schema.__lt__",
    "expression_impl.promote.PromoteChildExpression.__ne__": "expression_impl.map_prensor_to_prensor.Schema.__ne__",
    "expression_impl.promote.PromoteChildExpression.__new__": "expression_impl.map_prensor_to_prensor.Schema.__new__",
    "expression_impl.promote.PromoteExpression.__eq__": "expression_impl.promote.PromoteChildExpression.__eq__",
    "expression_impl.promote.PromoteExpression.__ge__": "expression_impl.map_prensor_to_prensor.Schema.__ge__",
    "expression_impl.promote.PromoteExpression.__gt__": "expression_impl.map_prensor_to_prensor.Schema.__gt__",
    "expression_impl.promote.PromoteExpression.__le__": "expression_impl.map_prensor_to_prensor.Schema.__le__",
    "expression_impl.promote.PromoteExpression.__lt__": "expression_impl.map_prensor_to_prensor.Schema.__lt__",
    "expression_impl.promote.PromoteExpression.__ne__": "expression_impl.map_prensor_to_prensor.Schema.__ne__",
    "expression_impl.promote.PromoteExpression.__new__": "expression_impl.map_prensor_to_prensor.Schema.__new__",
    "expression_impl.promote.PromoteExpression.apply": "expression_impl.promote.PromoteChildExpression.apply",
    "expression_impl.promote.PromoteExpression.apply_schema": "expression_impl.promote.PromoteChildExpression.apply_schema",
    "expression_impl.promote.PromoteExpression.broadcast": "expression_impl.promote.PromoteChildExpression.broadcast",
    "expression_impl.promote.PromoteExpression.cogroup_by_index": "expression_impl.promote.PromoteChildExpression.cogroup_by_index",
    "expression_impl.promote.PromoteExpression.create_has_field": "expression_impl.promote.PromoteChildExpression.create_has_field",
    "expression_impl.promote.PromoteExpression.create_proto_index": "expression_impl.promote.PromoteChildExpression.create_proto_index",
    "expression_impl.promote.PromoteExpression.create_size_field": "expression_impl.promote.PromoteChildExpression.create_size_field",
    "expression_impl.promote.PromoteExpression.get_child": "expression_impl.promote.PromoteChildExpression.get_child",
    "expression_impl.promote.PromoteExpression.get_child_or_error": "expression_impl.promote.PromoteChildExpression.get_child_or_error",
    "expression_impl.promote.PromoteExpression.get_descendant": "expression_impl.promote.PromoteChildExpression.get_descendant",
    "expression_impl.promote.PromoteExpression.get_descendant_or_error": "expression_impl.promote.PromoteChildExpression.get_descendant_or_error",
    "expression_impl.promote.PromoteExpression.get_known_children": "expression_impl.promote.PromoteChildExpression.get_known_children",
    "expression_impl.promote.PromoteExpression.get_known_descendants": "expression_impl.promote.PromoteChildExpression.get_known_descendants",
    "expression_impl.promote.PromoteExpression.get_paths_with_schema": "expression_impl.promote.PromoteChildExpression.get_paths_with_schema",
    "expression_impl.promote.PromoteExpression.get_schema": "expression_impl.promote.PromoteChildExpression.get_schema",
    "expression_impl.promote.PromoteExpression.is_leaf": "expression_impl.promote.PromoteChildExpression.is_leaf",
    "expression_impl.promote.PromoteExpression.is_repeated": "expression_impl.promote.PromoteChildExpression.is_repeated",
    "expression_impl.promote.PromoteExpression.map_field_values": "expression_impl.promote.PromoteChildExpression.map_field_values",
    "expression_impl.promote.PromoteExpression.map_ragged_tensors": "expression_impl.promote.PromoteChildExpression.map_ragged_tensors",
    "expression_impl.promote.PromoteExpression.map_sparse_tensors": "expression_impl.promote.PromoteChildExpression.map_sparse_tensors",
    "expression_impl.promote.PromoteExpression.project": "expression_impl.promote.PromoteChildExpression.project",
    "expression_impl.promote.PromoteExpression.promote": "expression_impl.promote.PromoteChildExpression.promote",
    "expression_impl.promote.PromoteExpression.promote_and_broadcast": "expression_impl.promote.PromoteChildExpression.promote_and_broadcast",
    "expression_impl.promote.PromoteExpression.reroot": "expression_impl.promote.PromoteChildExpression.reroot",
    "expression_impl.promote.PromoteExpression.schema_feature": "expression_impl.promote.PromoteChildExpression.schema_feature",
    "expression_impl.promote.PromoteExpression.schema_string": "expression_impl.promote.PromoteChildExpression.schema_string",
    "expression_impl.promote.PromoteExpression.slice": "expression_impl.promote.PromoteChildExpression.slice",
    "expression_impl.promote.PromoteExpression.truncate": "expression_impl.promote.PromoteChildExpression.truncate",
    "expression_impl.promote.PromoteExpression.type": "expression_impl.promote.PromoteChildExpression.type",
    "expression_impl.proto.DescriptorPool.__eq__": "expression_impl.map_prensor_to_prensor.Schema.__eq__",
    "expression_impl.proto.DescriptorPool.__ge__": "expression_impl.map_prensor_to_prensor.Schema.__ge__",
    "expression_impl.proto.DescriptorPool.__gt__": "expression_impl.map_prensor_to_prensor.Schema.__gt__",
    "expression_impl.proto.DescriptorPool.__le__": "expression_impl.map_prensor_to_prensor.Schema.__le__",
    "expression_impl.proto.DescriptorPool.__lt__": "expression_impl.map_prensor_to_prensor.Schema.__lt__",
    "expression_impl.proto.DescriptorPool.__ne__": "expression_impl.map_prensor_to_prensor.Schema.__ne__",
    "expression_impl.proto.TransformFn.__eq__": "expression_impl.map_prensor_to_prensor.Schema.__eq__",
    "expression_impl.proto.TransformFn.__ge__": "expression_impl.map_prensor_to_prensor.Schema.__ge__",
    "expression_impl.proto.TransformFn.__gt__": "expression_impl.map_prensor_to_prensor.Schema.__gt__",
    "expression_impl.proto.TransformFn.__le__": "expression_impl.map_prensor_to_prensor.Schema.__le__",
    "expression_impl.proto.TransformFn.__lt__": "expression_impl.map_prensor_to_prensor.Schema.__lt__",
    "expression_impl.proto.TransformFn.__ne__": "expression_impl.map_prensor_to_prensor.Schema.__ne__",
    "expression_impl.size.SizeExpression.__eq__": "expression_impl.promote.PromoteChildExpression.__eq__",
    "expression_impl.size.SizeExpression.__ge__": "expression_impl.map_prensor_to_prensor.Schema.__ge__",
    "expression_impl.size.SizeExpression.__gt__": "expression_impl.map_prensor_to_prensor.Schema.__gt__",
    "expression_impl.size.SizeExpression.__le__": "expression_impl.map_prensor_to_prensor.Schema.__le__",
    "expression_impl.size.SizeExpression.__lt__": "expression_impl.map_prensor_to_prensor.Schema.__lt__",
    "expression_impl.size.SizeExpression.__ne__": "expression_impl.map_prensor_to_prensor.Schema.__ne__",
    "expression_impl.size.SizeExpression.__new__": "expression_impl.map_prensor_to_prensor.Schema.__new__",
    "expression_impl.size.SizeExpression.apply": "expression_impl.promote.PromoteChildExpression.apply",
    "expression_impl.size.SizeExpression.apply_schema": "expression_impl.promote.PromoteChildExpression.apply_schema",
    "expression_impl.size.SizeExpression.broadcast": "expression_impl.promote.PromoteChildExpression.broadcast",
    "expression_impl.size.SizeExpression.cogroup_by_index": "expression_impl.promote.PromoteChildExpression.cogroup_by_index",
    "expression_impl.size.SizeExpression.create_has_field": "expression_impl.promote.PromoteChildExpression.create_has_field",
    "expression_impl.size.SizeExpression.create_proto_index": "expression_impl.promote.PromoteChildExpression.create_proto_index",
    "expression_impl.size.SizeExpression.create_size_field": "expression_impl.promote.PromoteChildExpression.create_size_field",
    "expression_impl.size.SizeExpression.get_child": "expression_impl.promote.PromoteChildExpression.get_child",
    "expression_impl.size.SizeExpression.get_child_or_error": "expression_impl.promote.PromoteChildExpression.get_child_or_error",
    "expression_impl.size.SizeExpression.get_descendant": "expression_impl.promote.PromoteChildExpression.get_descendant",
    "expression_impl.size.SizeExpression.get_descendant_or_error": "expression_impl.promote.PromoteChildExpression.get_descendant_or_error",
    "expression_impl.size.SizeExpression.get_known_children": "expression_impl.promote.PromoteChildExpression.get_known_children",
    "expression_impl.size.SizeExpression.get_known_descendants": "expression_impl.promote.PromoteChildExpression.get_known_descendants",
    "expression_impl.size.SizeExpression.get_paths_with_schema": "expression_impl.promote.PromoteChildExpression.get_paths_with_schema",
    "expression_impl.size.SizeExpression.get_schema": "expression_impl.promote.PromoteChildExpression.get_schema",
    "expression_impl.size.SizeExpression.is_leaf": "expression_impl.promote.PromoteChildExpression.is_leaf",
    "expression_impl.size.SizeExpression.is_repeated": "expression_impl.promote.PromoteChildExpression.is_repeated",
    "expression_impl.size.SizeExpression.known_field_names": "expression_impl.promote.PromoteExpression.known_field_names",
    "expression_impl.size.SizeExpression.map_field_values": "expression_impl.promote.PromoteChildExpression.map_field_values",
    "expression_impl.size.SizeExpression.map_ragged_tensors": "expression_impl.promote.PromoteChildExpression.map_ragged_tensors",
    "expression_impl.size.SizeExpression.map_sparse_tensors": "expression_impl.promote.PromoteChildExpression.map_sparse_tensors",
    "expression_impl.size.SizeExpression.project": "expression_impl.promote.PromoteChildExpression.project",
    "expression_impl.size.SizeExpression.promote": "expression_impl.promote.PromoteChildExpression.promote",
    "expression_impl.size.SizeExpression.promote_and_broadcast": "expression_impl.promote.PromoteChildExpression.promote_and_broadcast",
    "expression_impl.size.SizeExpression.reroot": "expression_impl.promote.PromoteChildExpression.reroot",
    "expression_impl.size.SizeExpression.schema_feature": "expression_impl.promote.PromoteChildExpression.schema_feature",
    "expression_impl.size.SizeExpression.schema_string": "expression_impl.promote.PromoteChildExpression.schema_string",
    "expression_impl.size.SizeExpression.slice": "expression_impl.promote.PromoteChildExpression.slice",
    "expression_impl.size.SizeExpression.truncate": "expression_impl.promote.PromoteChildExpression.truncate",
    "expression_impl.size.SizeExpression.type": "expression_impl.promote.PromoteChildExpression.type"
  },
  "is_fragment": {
    "expression_impl": false,
    "expression_impl.apply_schema": false,
    "expression_impl.apply_schema.apply_schema": false,
    "expression_impl.broadcast": false,
    "expression_impl.broadcast.broadcast": false,
    "expression_impl.broadcast.broadcast_anonymous": false,
    "expression_impl.depth_limit": false,
    "expression_impl.depth_limit.limit_depth": false,
    "expression_impl.filter_expression": false,
    "expression_impl.filter_expression.filter_by_child": false,
    "expression_impl.filter_expression.filter_by_sibling": false,
    "expression_impl.index": false,
    "expression_impl.index.get_index_from_end": false,
    "expression_impl.index.get_positional_index": false,
    "expression_impl.map_prensor": false,
    "expression_impl.map_prensor.map_ragged_tensor": false,
    "expression_impl.map_prensor.map_sparse_tensor": false,
    "expression_impl.map_prensor_to_prensor": false,
    "expression_impl.map_prensor_to_prensor.Schema": false,
    "expression_impl.map_prensor_to_prensor.Schema.__eq__": true,
    "expression_impl.map_prensor_to_prensor.Schema.__ge__": true,
    "expression_impl.map_prensor_to_prensor.Schema.__gt__": true,
    "expression_impl.map_prensor_to_prensor.Schema.__init__": true,
    "expression_impl.map_prensor_to_prensor.Schema.__le__": true,
    "expression_impl.map_prensor_to_prensor.Schema.__lt__": true,
    "expression_impl.map_prensor_to_prensor.Schema.__ne__": true,
    "expression_impl.map_prensor_to_prensor.Schema.__new__": true,
    "expression_impl.map_prensor_to_prensor.Schema.get_child": true,
    "expression_impl.map_prensor_to_prensor.Schema.is_repeated": true,
    "expression_impl.map_prensor_to_prensor.Schema.known_field_names": true,
    "expression_impl.map_prensor_to_prensor.Schema.schema_feature": true,
    "expression_impl.map_prensor_to_prensor.Schema.type": true,
    "expression_impl.map_prensor_to_prensor.create_schema": false,
    "expression_impl.map_prensor_to_prensor.map_prensor_to_prensor": false,
    "expression_impl.map_values": false,
    "expression_impl.map_values.map_many_values": false,
    "expression_impl.map_values.map_values": false,
    "expression_impl.map_values.map_values_anonymous": false,
    "expression_impl.parquet": false,
    "expression_impl.parquet.ParquetDataset": false,
    "expression_impl.parquet.ParquetDataset.__bool__": true,
    "expression_impl.parquet.ParquetDataset.__eq__": true,
    "expression_impl.parquet.ParquetDataset.__ge__": true,
    "expression_impl.parquet.ParquetDataset.__gt__": true,
    "expression_impl.parquet.ParquetDataset.__init__": true,
    "expression_impl.parquet.ParquetDataset.__iter__": true,
    "expression_impl.parquet.ParquetDataset.__le__": true,
    "expression_impl.parquet.ParquetDataset.__len__": true,
    "expression_impl.parquet.ParquetDataset.__lt__": true,
    "expression_impl.parquet.ParquetDataset.__ne__": true,
    "expression_impl.parquet.ParquetDataset.__new__": true,
    "expression_impl.parquet.ParquetDataset.__nonzero__": true,
    "expression_impl.parquet.ParquetDataset.apply": true,
    "expression_impl.parquet.ParquetDataset.as_numpy_iterator": true,
    "expression_impl.parquet.ParquetDataset.batch": true,
    "expression_impl.parquet.ParquetDataset.cache": true,
    "expression_impl.parquet.ParquetDataset.cardinality": true,
    "expression_impl.parquet.ParquetDataset.concatenate": true,
    "expression_impl.parquet.ParquetDataset.element_spec": true,
    "expression_impl.parquet.ParquetDataset.enumerate": true,
    "expression_impl.parquet.ParquetDataset.filter": true,
    "expression_impl.parquet.ParquetDataset.filter_with_legacy_function": true,
    "expression_impl.parquet.ParquetDataset.flat_map": true,
    "expression_impl.parquet.ParquetDataset.from_generator": true,
    "expression_impl.parquet.ParquetDataset.from_sparse_tensor_slices": true,
    "expression_impl.parquet.ParquetDataset.from_tensor_slices": true,
    "expression_impl.parquet.ParquetDataset.from_tensors": true,
    "expression_impl.parquet.ParquetDataset.get_single_element": true,
    "expression_impl.parquet.ParquetDataset.group_by_window": true,
    "expression_impl.parquet.ParquetDataset.interleave": true,
    "expression_impl.parquet.ParquetDataset.list_files": true,
    "expression_impl.parquet.ParquetDataset.make_initializable_iterator": true,
    "expression_impl.parquet.ParquetDataset.make_one_shot_iterator": true,
    "expression_impl.parquet.ParquetDataset.map": true,
    "expression_impl.parquet.ParquetDataset.map_with_legacy_function": true,
    "expression_impl.parquet.ParquetDataset.options": true,
    "expression_impl.parquet.ParquetDataset.output_classes": true,
    "expression_impl.parquet.ParquetDataset.output_shapes": true,
    "expression_impl.parquet.ParquetDataset.output_types": true,
    "expression_impl.parquet.ParquetDataset.padded_batch": true,
    "expression_impl.parquet.ParquetDataset.prefetch": true,
    "expression_impl.parquet.ParquetDataset.range": true,
    "expression_impl.parquet.ParquetDataset.reduce": true,
    "expression_impl.parquet.ParquetDataset.repeat": true,
    "expression_impl.parquet.ParquetDataset.shard": true,
    "expression_impl.parquet.ParquetDataset.shuffle": true,
    "expression_impl.parquet.ParquetDataset.skip": true,
    "expression_impl.parquet.ParquetDataset.take": true,
    "expression_impl.parquet.ParquetDataset.unbatch": true,
    "expression_impl.parquet.ParquetDataset.window": true,
    "expression_impl.parquet.ParquetDataset.with_options": true,
    "expression_impl.parquet.ParquetDataset.zip": true,
    "expression_impl.parquet.calculate_parquet_values": false,
    "expression_impl.parquet.create_expression_from_parquet_file": false,
    "expression_impl.placeholder": false,
    "expression_impl.placeholder.create_expression_from_schema": false,
    "expression_impl.placeholder.get_placeholder_paths_from_graph": false,
    "expression_impl.project": false,
    "expression_impl.project.project": false,
    "expression_impl.promote": false,
    "expression_impl.promote.PromoteChildExpression": false,
    "expression_impl.promote.PromoteChildExpression.__eq__": true,
    "expression_impl.promote.PromoteChildExpression.__ge__": true,
    "expression_impl.promote.PromoteChildExpression.__gt__": true,
    "expression_impl.promote.PromoteChildExpression.__init__": true,
    "expression_impl.promote.PromoteChildExpression.__le__": true,
    "expression_impl.promote.PromoteChildExpression.__lt__": true,
    "expression_impl.promote.PromoteChildExpression.__ne__": true,
    "expression_impl.promote.PromoteChildExpression.__new__": true,
    "expression_impl.promote.PromoteChildExpression.apply": true,
    "expression_impl.promote.PromoteChildExpression.apply_schema": true,
    "expression_impl.promote.PromoteChildExpression.broadcast": true,
    "expression_impl.promote.PromoteChildExpression.calculate": true,
    "expression_impl.promote.PromoteChildExpression.calculation_equal": true,
    "expression_impl.promote.PromoteChildExpression.calculation_is_identity": true,
    "expression_impl.promote.PromoteChildExpression.cogroup_by_index": true,
    "expression_impl.promote.PromoteChildExpression.create_has_field": true,
    "expression_impl.promote.PromoteChildExpression.create_proto_index": true,
    "expression_impl.promote.PromoteChildExpression.create_size_field": true,
    "expression_impl.promote.PromoteChildExpression.get_child": true,
    "expression_impl.promote.PromoteChildExpression.get_child_or_error": true,
    "expression_impl.promote.PromoteChildExpression.get_descendant": true,
    "expression_impl.promote.PromoteChildExpression.get_descendant_or_error": true,
    "expression_impl.promote.PromoteChildExpression.get_known_children": true,
    "expression_impl.promote.PromoteChildExpression.get_known_descendants": true,
    "expression_impl.promote.PromoteChildExpression.get_paths_with_schema": true,
    "expression_impl.promote.PromoteChildExpression.get_schema": true,
    "expression_impl.promote.PromoteChildExpression.get_source_expressions": true,
    "expression_impl.promote.PromoteChildExpression.is_leaf": true,
    "expression_impl.promote.PromoteChildExpression.is_repeated": true,
    "expression_impl.promote.PromoteChildExpression.known_field_names": true,
    "expression_impl.promote.PromoteChildExpression.map_field_values": true,
    "expression_impl.promote.PromoteChildExpression.map_ragged_tensors": true,
    "expression_impl.promote.PromoteChildExpression.map_sparse_tensors": true,
    "expression_impl.promote.PromoteChildExpression.project": true,
    "expression_impl.promote.PromoteChildExpression.promote": true,
    "expression_impl.promote.PromoteChildExpression.promote_and_broadcast": true,
    "expression_impl.promote.PromoteChildExpression.reroot": true,
    "expression_impl.promote.PromoteChildExpression.schema_feature": true,
    "expression_impl.promote.PromoteChildExpression.schema_string": true,
    "expression_impl.promote.PromoteChildExpression.slice": true,
    "expression_impl.promote.PromoteChildExpression.truncate": true,
    "expression_impl.promote.PromoteChildExpression.type": true,
    "expression_impl.promote.PromoteExpression": false,
    "expression_impl.promote.PromoteExpression.__eq__": true,
    "expression_impl.promote.PromoteExpression.__ge__": true,
    "expression_impl.promote.PromoteExpression.__gt__": true,
    "expression_impl.promote.PromoteExpression.__init__": true,
    "expression_impl.promote.PromoteExpression.__le__": true,
    "expression_impl.promote.PromoteExpression.__lt__": true,
    "expression_impl.promote.PromoteExpression.__ne__": true,
    "expression_impl.promote.PromoteExpression.__new__": true,
    "expression_impl.promote.PromoteExpression.apply": true,
    "expression_impl.promote.PromoteExpression.apply_schema": true,
    "expression_impl.promote.PromoteExpression.broadcast": true,
    "expression_impl.promote.PromoteExpression.calculate": true,
    "expression_impl.promote.PromoteExpression.calculation_equal": true,
    "expression_impl.promote.PromoteExpression.calculation_is_identity": true,
    "expression_impl.promote.PromoteExpression.cogroup_by_index": true,
    "expression_impl.promote.PromoteExpression.create_has_field": true,
    "expression_impl.promote.PromoteExpression.create_proto_index": true,
    "expression_impl.promote.PromoteExpression.create_size_field": true,
    "expression_impl.promote.PromoteExpression.get_child": true,
    "expression_impl.promote.PromoteExpression.get_child_or_error": true,
    "expression_impl.promote.PromoteExpression.get_descendant": true,
    "expression_impl.promote.PromoteExpression.get_descendant_or_error": true,
    "expression_impl.promote.PromoteExpression.get_known_children": true,
    "expression_impl.promote.PromoteExpression.get_known_descendants": true,
    "expression_impl.promote.PromoteExpression.get_paths_with_schema": true,
    "expression_impl.promote.PromoteExpression.get_schema": true,
    "expression_impl.promote.PromoteExpression.get_source_expressions": true,
    "expression_impl.promote.PromoteExpression.is_leaf": true,
    "expression_impl.promote.PromoteExpression.is_repeated": true,
    "expression_impl.promote.PromoteExpression.known_field_names": true,
    "expression_impl.promote.PromoteExpression.map_field_values": true,
    "expression_impl.promote.PromoteExpression.map_ragged_tensors": true,
    "expression_impl.promote.PromoteExpression.map_sparse_tensors": true,
    "expression_impl.promote.PromoteExpression.project": true,
    "expression_impl.promote.PromoteExpression.promote": true,
    "expression_impl.promote.PromoteExpression.promote_and_broadcast": true,
    "expression_impl.promote.PromoteExpression.reroot": true,
    "expression_impl.promote.PromoteExpression.schema_feature": true,
    "expression_impl.promote.PromoteExpression.schema_string": true,
    "expression_impl.promote.PromoteExpression.slice": true,
    "expression_impl.promote.PromoteExpression.truncate": true,
    "expression_impl.promote.PromoteExpression.type": true,
    "expression_impl.promote.promote": false,
    "expression_impl.promote.promote_anonymous": false,
    "expression_impl.promote_and_broadcast": false,
    "expression_impl.promote_and_broadcast.promote_and_broadcast": false,
    "expression_impl.promote_and_broadcast.promote_and_broadcast_anonymous": false,
    "expression_impl.proto": false,
    "expression_impl.proto.DescriptorPool": false,
    "expression_impl.proto.DescriptorPool.Add": true,
    "expression_impl.proto.DescriptorPool.AddDescriptor": true,
    "expression_impl.proto.DescriptorPool.AddEnumDescriptor": true,
    "expression_impl.proto.DescriptorPool.AddExtensionDescriptor": true,
    "expression_impl.proto.DescriptorPool.AddFileDescriptor": true,
    "expression_impl.proto.DescriptorPool.AddSerializedFile": true,
    "expression_impl.proto.DescriptorPool.AddServiceDescriptor": true,
    "expression_impl.proto.DescriptorPool.FindAllExtensions": true,
    "expression_impl.proto.DescriptorPool.FindEnumTypeByName": true,
    "expression_impl.proto.DescriptorPool.FindExtensionByName": true,
    "expression_impl.proto.DescriptorPool.FindExtensionByNumber": true,
    "expression_impl.proto.DescriptorPool.FindFieldByName": true,
    "expression_impl.proto.DescriptorPool.FindFileByName": true,
    "expression_impl.proto.DescriptorPool.FindFileContainingSymbol": true,
    "expression_impl.proto.DescriptorPool.FindMessageTypeByName": true,
    "expression_impl.proto.DescriptorPool.FindMethodByName": true,
    "expression_impl.proto.DescriptorPool.FindOneofByName": true,
    "expression_impl.proto.DescriptorPool.FindServiceByName": true,
    "expression_impl.proto.DescriptorPool.__eq__": true,
    "expression_impl.proto.DescriptorPool.__ge__": true,
    "expression_impl.proto.DescriptorPool.__gt__": true,
    "expression_impl.proto.DescriptorPool.__init__": true,
    "expression_impl.proto.DescriptorPool.__le__": true,
    "expression_impl.proto.DescriptorPool.__lt__": true,
    "expression_impl.proto.DescriptorPool.__ne__": true,
    "expression_impl.proto.DescriptorPool.__new__": true,
    "expression_impl.proto.FileDescriptorSet": false,
    "expression_impl.proto.FileDescriptorSet.ByteSize": true,
    "expression_impl.proto.FileDescriptorSet.Clear": true,
    "expression_impl.proto.FileDescriptorSet.ClearExtension": true,
    "expression_impl.proto.FileDescriptorSet.ClearField": true,
    "expression_impl.proto.FileDescriptorSet.CopyFrom": true,
    "expression_impl.proto.FileDescriptorSet.DESCRIPTOR": true,
    "expression_impl.proto.FileDescriptorSet.DiscardUnknownFields": true,
    "expression_impl.proto.FileDescriptorSet.Extensions": true,
    "expression_impl.proto.FileDescriptorSet.FindInitializationErrors": true,
    "expression_impl.proto.FileDescriptorSet.FromString": true,
    "expression_impl.proto.FileDescriptorSet.HasExtension": true,
    "expression_impl.proto.FileDescriptorSet.HasField": true,
    "expression_impl.proto.FileDescriptorSet.IsInitialized": true,
    "expression_impl.proto.FileDescriptorSet.ListFields": true,
    "expression_impl.proto.FileDescriptorSet.MergeFrom": true,
    "expression_impl.proto.FileDescriptorSet.MergeFromString": true,
    "expression_impl.proto.FileDescriptorSet.ParseFromString": true,
    "expression_impl.proto.FileDescriptorSet.RegisterExtension": true,
    "expression_impl.proto.FileDescriptorSet.SerializePartialToString": true,
    "expression_impl.proto.FileDescriptorSet.SerializeToString": true,
    "expression_impl.proto.FileDescriptorSet.SetInParent": true,
    "expression_impl.proto.FileDescriptorSet.UnknownFields": true,
    "expression_impl.proto.FileDescriptorSet.WhichOneof": true,
    "expression_impl.proto.FileDescriptorSet.__eq__": true,
    "expression_impl.proto.FileDescriptorSet.__ge__": true,
    "expression_impl.proto.FileDescriptorSet.__gt__": true,
    "expression_impl.proto.FileDescriptorSet.__init__": true,
    "expression_impl.proto.FileDescriptorSet.__le__": true,
    "expression_impl.proto.FileDescriptorSet.__lt__": true,
    "expression_impl.proto.FileDescriptorSet.__ne__": true,
    "expression_impl.proto.FileDescriptorSet.__new__": true,
    "expression_impl.proto.FileDescriptorSet.file": true,
    "expression_impl.proto.ProtoExpression": false,
    "expression_impl.proto.TransformFn": false,
    "expression_impl.proto.TransformFn.__call__": true,
    "expression_impl.proto.TransformFn.__eq__": true,
    "expression_impl.proto.TransformFn.__ge__": true,
    "expression_impl.proto.TransformFn.__gt__": true,
    "expression_impl.proto.TransformFn.__init__": true,
    "expression_impl.proto.TransformFn.__le__": true,
    "expression_impl.proto.TransformFn.__lt__": true,
    "expression_impl.proto.TransformFn.__ne__": true,
    "expression_impl.proto.TransformFn.__new__": true,
    "expression_impl.proto.create_expression_from_file_descriptor_set": false,
    "expression_impl.proto.create_expression_from_proto": false,
    "expression_impl.proto.create_transformed_field": false,
    "expression_impl.proto.is_proto_expression": false,
    "expression_impl.reroot": false,
    "expression_impl.reroot.create_proto_index_field": false,
    "expression_impl.reroot.reroot": false,
    "expression_impl.size": false,
    "expression_impl.size.SizeExpression": false,
    "expression_impl.size.SizeExpression.__eq__": true,
    "expression_impl.size.SizeExpression.__ge__": true,
    "expression_impl.size.SizeExpression.__gt__": true,
    "expression_impl.size.SizeExpression.__init__": true,
    "expression_impl.size.SizeExpression.__le__": true,
    "expression_impl.size.SizeExpression.__lt__": true,
    "expression_impl.size.SizeExpression.__ne__": true,
    "expression_impl.size.SizeExpression.__new__": true,
    "expression_impl.size.SizeExpression.apply": true,
    "expression_impl.size.SizeExpression.apply_schema": true,
    "expression_impl.size.SizeExpression.broadcast": true,
    "expression_impl.size.SizeExpression.calculate": true,
    "expression_impl.size.SizeExpression.calculation_equal": true,
    "expression_impl.size.SizeExpression.calculation_is_identity": true,
    "expression_impl.size.SizeExpression.cogroup_by_index": true,
    "expression_impl.size.SizeExpression.create_has_field": true,
    "expression_impl.size.SizeExpression.create_proto_index": true,
    "expression_impl.size.SizeExpression.create_size_field": true,
    "expression_impl.size.SizeExpression.get_child": true,
    "expression_impl.size.SizeExpression.get_child_or_error": true,
    "expression_impl.size.SizeExpression.get_descendant": true,
    "expression_impl.size.SizeExpression.get_descendant_or_error": true,
    "expression_impl.size.SizeExpression.get_known_children": true,
    "expression_impl.size.SizeExpression.get_known_descendants": true,
    "expression_impl.size.SizeExpression.get_paths_with_schema": true,
    "expression_impl.size.SizeExpression.get_schema": true,
    "expression_impl.size.SizeExpression.get_source_expressions": true,
    "expression_impl.size.SizeExpression.is_leaf": true,
    "expression_impl.size.SizeExpression.is_repeated": true,
    "expression_impl.size.SizeExpression.known_field_names": true,
    "expression_impl.size.SizeExpression.map_field_values": true,
    "expression_impl.size.SizeExpression.map_ragged_tensors": true,
    "expression_impl.size.SizeExpression.map_sparse_tensors": true,
    "expression_impl.size.SizeExpression.project": true,
    "expression_impl.size.SizeExpression.promote": true,
    "expression_impl.size.SizeExpression.promote_and_broadcast": true,
    "expression_impl.size.SizeExpression.reroot": true,
    "expression_impl.size.SizeExpression.schema_feature": true,
    "expression_impl.size.SizeExpression.schema_string": true,
    "expression_impl.size.SizeExpression.slice": true,
    "expression_impl.size.SizeExpression.truncate": true,
    "expression_impl.size.SizeExpression.type": true,
    "expression_impl.size.has": false,
    "expression_impl.size.size": false,
    "expression_impl.size.size_anonymous": false,
    "expression_impl.slice_expression": false,
    "expression_impl.slice_expression.IndexValue": false,
    "expression_impl.slice_expression.slice_expression": false
  },
  "py_module_names": [
    "expression_impl"
  ],
  "site_link": null
}
